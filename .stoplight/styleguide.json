{
  "name": "Validis API",
  "description": "",
  "spectralExtends": [],
  "extends": [],
  "formats": [
    "oas2",
    "oas3",
    "oas3.0",
    "oas3.1"
  ],
  "aliases": {
    "API_Document": {
      "id": "Da4nttRwFL2y7y92UF0zg",
      "description": "The complete API specification document. This can be used to target any part of the OpenAPI document using **field**.\n\n*Use this if you don't find specific targets that cater to your usecase.* ",
      "name": "API_Document",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$"
        }
      ]
    },
    "API_Description": {
      "id": "oEinfN6JqDLu_mk6ieNmL",
      "description": "The top level description in an API document",
      "name": "API_Description",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$.info.description"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.info.description"
        }
      ]
    },
    "Operation_Object": {
      "id": "ggCNlaV9viUP41ocnJvz5",
      "description": "The complete operation object. Use it in combo with field object.",
      "name": "Operation_Object",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "#Path_Item[get,put,post,delete,options,head,patch,trace]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "#Path_Item[get,put,post,delete,options,head,patch,trace]"
        }
      ]
    },
    "Operation_Responses": {
      "id": "DdgUi1JqpBz5T2thKSw5v",
      "description": "Responses for all operations including get, put, post, delete, options, head, patch, trace.",
      "name": "Operation_Responses",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "#Operation_Object.responses"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "#Operation_Object.responses"
        }
      ]
    },
    "Path_Item": {
      "id": "NwOvsJpTg5x4SexVbL5Zy",
      "name": "Path_Item",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$.paths[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.paths[*]"
        }
      ]
    },
    "API_Contact": {
      "id": "RxOiXYFdhOmlLKGEWclXO",
      "description": "The top level description in an API document",
      "name": "API_Contact",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$.info.contact"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.info.contact"
        }
      ]
    },
    "API_License": {
      "id": "QZeAYP_KSux4C-plI20-H",
      "description": "The top level description in an API document",
      "name": "API_License",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$.info.license"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.info.license"
        }
      ]
    },
    "All_Markdown": {
      "id": "VdmoLmS46AFikJPJTxxly",
      "description": "All markdown descriptions across the document.",
      "name": "All_Markdown",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..[description,title]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..[description,title]"
        }
      ]
    },
    "API_Tags": {
      "id": "sNpo5MPiq54e_80K_U14w",
      "description": "Tags on an API object",
      "name": "API_Tags",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "#Operation_Object.tags"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "#Operation_Object.tags"
        }
      ]
    },
    "All_Servers": {
      "id": "jwG-csq_JnbBsy_roPAPO",
      "description": "API hosts defined in the API specification",
      "name": "All_Servers",
      "targets": [
        {
          "formats": [
            "oas3"
          ],
          "given": "$.servers[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "#Path_Item.servers[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "#Operation_Object.servers[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "#Link_Object.server"
        },
        {
          "formats": [
            "oas2"
          ],
          "given": "$.host"
        }
      ]
    },
    "Response_All_Object": {
      "id": "pK9FzEl8xyM5kIfsz-ulj",
      "description": "All responses (object) in an API",
      "name": "Response_All_Object",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$.responses"
        },
        {
          "formats": [
            "oas2"
          ],
          "given": "#Operation_Responses"
        },
        {
          "formats": [
            "oas2"
          ],
          "given": "$..responses"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.components.responses"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "#Operation_Responses"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..responses"
        }
      ]
    },
    "API_Server_URL": {
      "id": "wRIXiQeMCt9aQ40_0FGOU",
      "description": "API host urls defined in the API specification",
      "name": "API_Server_URL",
      "targets": [
        {
          "formats": [
            "oas3"
          ],
          "given": "$.servers[*].url"
        },
        {
          "formats": [
            "oas2"
          ],
          "given": "$.host"
        }
      ]
    },
    "All_Ref": {
      "id": "GLXt5VUoAuFbaeSez3e6U",
      "description": "All references throughout the API",
      "name": "All_Ref",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..[?(@property === '$ref')]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..[?(@property === '$ref')]"
        }
      ]
    },
    "All_Enum_Object": {
      "id": "8fM2aXH8MsGjmYhkKl7Lo",
      "description": "All references throughout the API",
      "name": "All_Enum_Object",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..[?(@ && @.enum)]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..[?(@ && @.enum)]"
        }
      ]
    },
    "Request_Parameter_All": {
      "id": "u4EqmumbPRZ2hqDkWhTAe",
      "description": "All request parameters",
      "name": "Request_Parameter_All",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..parameters[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..parameters[*]"
        }
      ]
    },
    "Request_Parameter_Query": {
      "id": "sEMt2Ln7PZ6TDCJEZRLuF",
      "description": "All request query parameters",
      "name": "Request_Parameter_Query",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..parameters[?(@ && @.in==\"query\")]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..parameters[?(@ && @.in==\"query\")]"
        }
      ]
    },
    "Request_Parameter_Header": {
      "id": "pcwcINxFXXjfK7eaKsP3U",
      "description": "All request header parameters",
      "name": "Request_Parameter_Header",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..parameters[?(@ && @.in==\"header\")]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..parameters[?(@ && @.in==\"header\")]"
        }
      ]
    },
    "Request_Parameter_Cookie": {
      "id": "uuecGQLNd4zo5ezsHqOIF",
      "description": "All request cookie parameters",
      "name": "Request_Parameter_Cookie",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..parameters[?(@ && @.in==\"cookie\")]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..parameters[?(@ && @.in==\"cookie\")]"
        }
      ]
    },
    "Request_Parameter_Path": {
      "id": "HgOF2sq46dHUUSPjPfmqx",
      "description": "All request path parameters",
      "name": "Request_Parameter_Path",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..parameters[?(@ && @.in==\"path\")]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..parameters[?(@ && @.in==\"path\")]"
        }
      ]
    },
    "Path_Object": {
      "id": "E7c7IuMIyPeQKJa62X7CW",
      "description": "Path object. Usually used to target the Path key e.g. `/users/{userId}`",
      "name": "Path_Object",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$.paths"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.paths"
        }
      ]
    },
    "All_Example_Schema": {
      "id": "DBPPvrn8quj9RTARj2i7b",
      "description": "All examples for schemas",
      "name": "All_Example_Schema",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..definitions..[?(@property !== 'properties' && @ && (@.example !== void 0 || @['x-example'] !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]"
        },
        {
          "formats": [
            "oas2"
          ],
          "given": "$..parameters..[?(@property !== 'properties' && @ && (@.example !== void 0 || @['x-example'] !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]"
        },
        {
          "formats": [
            "oas2"
          ],
          "given": "$..responses..[?(@property !== 'properties' && @ && (@.example !== void 0 || @['x-example'] !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.components.schemas..[?(@property !== 'properties' && @ && (@ && @.example !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..content..[?(@property !== 'properties' && @ && (@ && @.example !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..headers..[?(@property !== 'properties' && @ && (@ && @.example !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..parameters..[?(@property !== 'properties' && @ && (@ && @.example !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]"
        }
      ]
    },
    "API_Document_RecursiveSearch": {
      "id": "2WXD5I3YSPvJWzc1b3jDr",
      "description": "The complete API specification document. This can be used to target any part of the OpenAPI document using **field**.\n\n*Use this if you don't find specific targets that cater to your usecase.* ",
      "name": "API_Document_RecursiveSearch",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$.."
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.."
        }
      ]
    },
    "All_Example": {
      "id": "gmXwT_MYRq_lx6_mP4gV6",
      "description": "All examples across the API document",
      "name": "All_Example",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..examples[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.components.examples[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.paths[*][*]..content[*].examples[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.paths[*][*]..parameters[*].examples[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.components.parameters[*].examples[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.paths[*][*]..headers[*].examples[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.components.headers[*].examples[*]"
        }
      ]
    },
    "All_Example_Media": {
      "id": "2fjjyRwZM3pgp-p1DnFtT",
      "description": "All examples for schemas",
      "name": "All_Example_Media",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..responses..[?(@ && @.schema && @.examples)]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..content..[?(@ && @.schema && (@.example !== void 0 || @.examples))]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..headers..[?(@ && @.schema && (@.example !== void 0 || @.examples))]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..parameters..[?(@ && @.schema && (@.example !== void 0 || @.examples))]"
        }
      ]
    },
    "API_Tags_Item": {
      "id": "qRCLBeSCCy9jsoz8M5uBc",
      "description": "Tags on an API object",
      "name": "API_Tags_Item",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$.tags[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.tags[*]"
        }
      ]
    },
    "All_Enum_Value": {
      "id": "SkzewNGa7cHxfHfekQpCo",
      "description": "All enum values throughout the API",
      "name": "All_Enum_Value",
      "targets": [
        {
          "formats": [
            "oas2"
          ],
          "given": "$..[?(@ && @.enum)].enum[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$..[?(@ && @.enum)].enum[*]"
        }
      ]
    },
    "Link_Object": {
      "id": "MS71GAuT3V8vz_Ufw6esD",
      "name": "Link_Object",
      "targets": [
        {
          "formats": [
            "oas3"
          ],
          "given": "$.components.links[*]"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "#Response_All_Object.links[*]"
        }
      ]
    },
    "API_Server": {
      "id": "K5UWkoTZ_TLdsA8vpRwIw",
      "description": "API hosts defined in the API specification",
      "name": "API_Server",
      "targets": [
        {
          "formats": [
            "oas3"
          ],
          "given": "$.servers"
        },
        {
          "formats": [
            "oas2"
          ],
          "given": "$.host"
        }
      ]
    }
  },
  "rules": {
    "contact-url": {
      "id": "IZJJmf9NYdT8a4HapOJk8",
      "given": [
        "#API_Contact"
      ],
      "severity": "warn",
      "then": {
        "function": "truthy",
        "field": "url"
      },
      "name": "contact-url",
      "description": "The `contact` object should have a valid organization URL. \r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"contact\": {\r\n     ... ,\r\n     \"url\": \"https://acme.com\",\r\n     ... \r\n},\r\n```",
      "message": "Contact object should have \"url\"."
    },
    "contact-email": {
      "id": "_fZ8BdIcVC0w19nhcSdwI",
      "given": [
        "#API_Contact"
      ],
      "severity": "warn",
      "then": {
        "function": "truthy",
        "field": "email"
      },
      "name": "contact-email",
      "description": "The `contact` object should have a valid email. \r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"contact\": {\r\n     ... ,\r\n     ... ,\r\n     \"email\": \"support.contact@acme.com\"\r\n},\r\n```",
      "message": "Contact object should have \"email\""
    },
    "info-contact": {
      "id": "lR-fWt3fZXibL9gqIv2r6",
      "given": [
        "#API_Document"
      ],
      "severity": "warn",
      "then": {
        "function": "truthy",
        "field": "info.contact"
      },
      "name": "info-contact",
      "description": "The `info' object should include a `contact` object.\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"info\": {\r\n    ... ,\r\n    ... ,\r\n    \"contact\": {\r\n      \"name\": \"ACME Corporation\",\r\n      \"url\": \"https://acme.com\",\r\n      \"email\": \"support.contact@acme.com\"\r\n    }\r\n  } \r\n}\r\n```",
      "message": "Info object should have \"contact\" object."
    },
    "info-description": {
      "id": "7kHo8Aqq9ZT8Zwa-o7Rfi",
      "given": [
        "#API_Document"
      ],
      "severity": "warn",
      "then": {
        "function": "truthy",
        "field": "info.description"
      },
      "name": "info-description",
      "description": "The `info` object should have a `description` object.\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"info\": {\r\n    ... ,\r\n    ... ,\r\n    \"description\": \"This describes my API.\",\r\n    ... \r\n    }\r\n  } \r\n}\r\n```",
      "message": "Info object should have \"description\" object."
    },
    "info-license": {
      "id": "66ebZIyySyHPXAPt9OGUz",
      "given": [
        "#API_Document"
      ],
      "severity": "warn",
      "then": {
        "function": "truthy",
        "field": "info.license"
      },
      "name": "info-license",
      "description": "The `info` object should have a `license` object. \r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"info\": {\r\n    ... ,\r\n    ... ,\r\n    \"license\": {\r\n      \"name\": \"Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)\",\r\n      \"url\": \"https://creativecommons.org/licenses/by-sa/4.0/\"\r\n    }\r\n  } \r\n}\r\n```",
      "message": "Info object should have \"license\" object."
    },
    "license-url": {
      "id": "qWWTVsOtZuDyZgbWG1LPE",
      "given": [
        "#API_License"
      ],
      "severity": "warn",
      "then": {
        "function": "truthy",
        "field": "url"
      },
      "name": "license-url",
      "description": "The `license` object should include a valid url.\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"license\": {\r\n    \"name\": \"Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)\",\r\n    \"url\": \"https://creativecommons.org/licenses/by-sa/4.0/\"\r\n  }\r\n}\r\n```",
      "message": "License object should include \"url\"."
    },
    "no-eval-in-markdown": {
      "id": "VU-xVUp1hHcLlftfBazt0",
      "given": [
        "#All_Markdown"
      ],
      "severity": "warn",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "notMatch": "eval\\("
        }
      },
      "name": "no-eval-in-markdown",
      "description": "Markdown descriptions should not contain [`eval()` functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval), which pose a security risk. \r\n\r\n**Invalid Example**\r\n\r\n```json lineNumbers\r\n{  \r\n  \"info\": {\r\n    ... ,\r\n    ... , \r\n    \"description\": \"API for users. eval()\"",
      "message": "Markdown descriptions must not have \"eval(\"."
    },
    "no-script-tags-in-markdown": {
      "id": "UmRKsy5eCsnhA1K1xvkG_",
      "given": [
        "#All_Markdown"
      ],
      "severity": "warn",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "notMatch": "<script"
        }
      },
      "name": "no-script-tags-in-markdown",
      "description": "Markdown descriptions should not contain `script` tags, which pose a security risk. \r\n\r\n**Invalid Example**\r\n\r\n```json lineNumbers\r\n{  \r\n  \"info\": {\r\n    ... ,\r\n    ... , \r\n    \"description\": \"API for users. <script>alert(\"You are Hacked\");</script>',\"\r\n```",
      "message": "Markdown descriptions must not have \"<script>\" tags."
    },
    "openapi-tags-alphabetical": {
      "id": "H48RfslEaYn-8754Dz1e4",
      "given": [
        "#API_Document"
      ],
      "severity": "warn",
      "then": {
        "function": "alphabetical",
        "functionOptions": {
          "keyedBy": "name"
        },
        "field": "tags"
      },
      "name": "openapi-tags-alphabetical",
      "description": "Global tags specified at the root OpenAPI Document level should be in alphabetical order based on the `name` property.\r\n\r\n**Invalid Example**\r\n\r\n```json lineNumbers\r\n{\r\n   \"tags\":[\r\n      {\r\n         \"name\":\"Z Global Tag\"\r\n      },\r\n      {\r\n         \"name\":\"A Global Tag\"\r\n      }\r\n   ]\r\n}\r\n```\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n   \"tags\":[\r\n      {\r\n         \"name\":\"A Global Tag\"\r\n      },\r\n      {\r\n         \"name\":\"Z Global Tag\"\r\n      }\r\n   ]\r\n}\r\n```",
      "message": "OpenAPI object should have alphabetical \"tags\"."
    },
    "openapi-tags": {
      "id": "gQalCL6JA2RGi0kQXplil",
      "given": [
        "#API_Document"
      ],
      "severity": "warn",
      "then": {
        "function": "schema",
        "functionOptions": {
          "schema": {
            "type": "array",
            "minItems": 1
          }
        },
        "field": "tags"
      },
      "name": "openapi-tags",
      "description": "At least one global tag should be specified at the root OpenAPI Document level.\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n   \"tags\":[\r\n      {\r\n         \"name\":\"Global Tag #1\"\r\n      },\r\n      {\r\n         \"name\":\"Global Tag #2\"\r\n      }\r\n   ]\r\n}\r\n```",
      "message": "OpenAPI object should have non-empty \"tags\" array."
    },
    "operation-description": {
      "id": "egVv77mNIjHPkLm4vS22j",
      "given": [
        "#Operation_Object"
      ],
      "severity": "warn",
      "then": {
        "function": "truthy",
        "field": "description"
      },
      "name": "operation-description",
      "description": "Each operation should have a description. \r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"get\": {\r\n    ... ,\r\n    \"description\": \"Get a list of users.\",\r\n    ... ,\r\n    ... ,\r\n  }\r\n}\r\n```",
      "message": "Operation \"description\" should be present and non-empty string."
    },
    "operation-operationId": {
      "id": "Panc2zJ8FV4aYPZdwg9nY",
      "given": [
        "#Operation_Object"
      ],
      "severity": "warn",
      "then": {
        "function": "truthy",
        "field": "operationId"
      },
      "name": "operation-operationId",
      "description": "All operations should have an `operationId`.\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"get\": {\r\n        \"summary\": \"Get users\",\r\n        ... ,\r\n        \"operationId\": \"get-users\"\r\n      }\r\n}\r\n```",
      "message": "Operation should have \"operationId\"."
    },
    "operation-operationId-valid-in-url": {
      "id": "4nmklImlqPTbqxB_EH1Xe",
      "given": [
        "#Operation_Object"
      ],
      "severity": "error",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "match": "^[A-Za-z0-9-._~:/?#\\[\\]@!\\$&'()*+,;=]*$"
        },
        "field": "operationId"
      },
      "name": "operation-operationId-valid-in-url",
      "description": "Operation IDs must not contain characters that are invalid for URLs. \r\n\r\n**Invalid Example**\r\n\r\nThe `operationId` in this example includes a pipe and space, which are invalid for URLs.\r\n\r\n```json lineNumbers\r\n{\r\n    \"/users\": {\r\n      \"get\": {\r\n        ... ,\r\n         \"operationId\": \"invalid|operationID \",\r\n         ... ,\r\n      }\r\n    }\r\n}\r\n```\r\n\r\n**Valid Example**\r\n\r\nThis `operationId` is valid for URLs.\r\n\r\n```json lineNumbers\r\n{\r\n    \"/users\": {\r\n      \"get\": {\r\n        ... ,\r\n         \"operationId\": \"this-must-be-unique\",\r\n         ... ,\r\n      }\r\n    }\r\n}\r\n```",
      "message": "OperationId should not have characters that are invalid when used in URL."
    },
    "operation-singular-tag": {
      "id": "VlCPn5FpPhb_PuzMCBpPB",
      "given": [
        "#API_Tags"
      ],
      "severity": "off",
      "then": {
        "function": "length",
        "functionOptions": {
          "max": 1
        }
      },
      "name": "operation-singular-tag",
      "description": "Operation should not have more than a single tag.",
      "message": "Operation should not have more than a single tag."
    },
    "operation-tags": {
      "id": "b6BvZNGGfhkjNF4FEFtP5",
      "given": [
        "#Operation_Object"
      ],
      "severity": "warn",
      "then": {
        "function": "length",
        "functionOptions": {
          "max": 999,
          "min": 1
        },
        "field": "tags"
      },
      "name": "operation-tags",
      "description": "At least one tag should be defined for each operation.\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"get\": {\r\n     ... ,\r\n     ... ,\r\n     \"tags\": [\r\n        \"Users\"\r\n     ],\r\n  }\r\n}",
      "message": "Operation should have non-empty \"tags\" array."
    },
    "path-declarations-must-exist": {
      "id": "udp-_eTSX4ZYmNQ1uyUyJ",
      "given": [
        "#Path_Item"
      ],
      "severity": "error",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "notMatch": "{}"
        },
        "field": "@key"
      },
      "name": "path-declarations-must-exist",
      "description": "Path parameter declarations must not be empty.\r\n\r\n**Invalid Example**\r\n\r\n`/users/{}`\r\n\r\n**Valid Example**\r\n\r\n`/users/{userId}`",
      "message": "Path parameter declarations must not be empty, ex.\"/given/{}\" is invalid."
    },
    "contact-name": {
      "id": "365hGP6Lq5Vi9gquxeoYd",
      "given": [
        "#API_Contact"
      ],
      "severity": "warn",
      "then": {
        "function": "truthy",
        "field": "name"
      },
      "name": "contact-name",
      "description": "The `contact` object should have an organization name. \r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"contact\": {\r\n    \"name\": \"ACME Corporation\",\r\n     ... ,\r\n     ... \r\n},\r\n```\r\n",
      "message": "Contact object should have \"name\""
    },
    "path-keys-no-trailing-slash": {
      "id": "FMKNqAa_YDHHoHIgzUT2O",
      "given": [
        "#Path_Object"
      ],
      "severity": "warn",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "notMatch": ".+\\/$"
        },
        "field": "@key"
      },
      "name": "path-keys-no-trailing-slash",
      "description": "Path keys should not end in forward slashes. This is a best practice for working with web tooling, such as mock servers, code generators, application frameworks, and more).\r\n\r\n**Invalid Example**\r\n\r\n```json\r\n{\r\n \"/users/\": {\r\n```\r\n\r\n**Valid Example**\r\n\r\n```json\r\n{\r\n \"/users\": {\r\n```",
      "message": "Path should not end with slash."
    },
    "path-not-include-query": {
      "id": "MIYWfxZF3JuaNuwwg-ZsX",
      "given": [
        "#Path_Object"
      ],
      "severity": "warn",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "notMatch": "\\?"
        },
        "field": "@key"
      },
      "name": "path-not-include-query",
      "description": "Paths should not include `query` string items. Instead, add them as parameters with `in: query`.\r\n\r\n**Invalid Example**\r\n\r\n```json\r\n{\r\n \"/users/{?id}\": {\r\n\r\n```\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"parameters\": [\r\n    {\r\n      \"schema\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"name\": \"id\",\r\n      \"in\": \"path\",\r\n      \"required\": true,\r\n      \"description\": \"User's ID\"\r\n    }\r\n  ]\r\n}\r\n\r\n```",
      "message": "Path should not include query string."
    },
    "tag-description": {
      "id": "rHK1cm20_DDlKJs0WIg2L",
      "given": [
        "#API_Tags_Item"
      ],
      "severity": "warn",
      "then": {
        "function": "truthy",
        "field": "description"
      },
      "name": "tag-description",
      "description": "Tags defined at the global level should have a description.\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n   \"tags\": [\r\n      {\r\n         \"name\":\"Users\",\r\n         \"description\":\"End-user information\"\r\n      }\r\n   ]\r\n}\r\n```",
      "message": "Tag object should have \"description\"."
    },
    "api-servers": {
      "id": "1MsvAE8-s9vAAgN7eSkaI",
      "given": [
        "#API_Server"
      ],
      "severity": "warn",
      "then": {
        "function": "schema",
        "functionOptions": {
          "schema": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object"
            }
          },
          "dialect": "draft7"
        }
      },
      "name": "api-servers",
      "description": "A server should be defined at the root document level. This can be localhost, a development server, or a production server. \n\n**Valid OpenAPI V3 Example**\n\n```json\n{\n  \"servers\": [\n    {\n      \"url\": \"https://staging.myprodserver.com/v1\",\n      \"description\": \"Staging server\"\n    },\n    {\n      \"url\": \"https://myprodserver.com/v1\",\n      \"description\": \"Production server\"\n    }\n  ]\n}\n```\n\n**Valid OpenAPI V2 Example**\n\n```json\n{\n  \"host\": \"myprodserver.com\",\n  \"basePath\": \"/v2\",\n  \"schemes\": [\n    \"https\"\n  ]\n}\n```\n\n",
      "message": "Server should be present."
    },
    "server-trailing-slash": {
      "id": "UICaA8uld4kPsbwA1t1mJ",
      "given": [
        "#API_Server_URL"
      ],
      "severity": "warn",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "notMatch": "/$"
        }
      },
      "name": "server-trailing-slash",
      "description": "Server URLs should not end in forward slashes. This is a best practice for working with web tooling, such as mock servers, code generators, application frameworks, and more).\r\n\r\n**Invalid Example**\r\n\r\n```json lineNumbers\r\n{  \r\n  \"servers\": [\r\n    {\r\n      ... ,\r\n      \"url\": \"https://api.openweathermap.org/data/2.5/\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{  \r\n  \"servers\": [\r\n    {\r\n      ... ,\r\n      \"url\": \"https://api.openweathermap.org/data/2.5\"\r\n    }\r\n  ]\r\n}\r\n```",
      "message": "Server URL should not have trailing slash"
    },
    "operation-success-response": {
      "id": "u3M-rprkB_4qqaPgtau7p",
      "given": [
        "#Operation_Object"
      ],
      "severity": "warn",
      "then": {
        "function": "oasOpSuccessResponse",
        "field": "responses"
      },
      "name": "operation-success-response",
      "description": "Operations should have at least one \"2xx\" or \"3xx\" response defined.\r\n\r\n**Invalid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"get\": {\r\n      ... ,\r\n      \"responses\": {},\r\n  }\r\n}\r\n```\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"get\": {\r\n      ... ,\r\n      \"responses\": {\r\n        \"200\": {\r\n          \"description\": \"OK\"\r\n        }\r\n      },\r\n  }\r\n}\r\n```",
      "message": "Operation should have at least one \"2xx\" or \"3xx\" response."
    },
    "path-params": {
      "id": "XCDm1CjxLB8rUkASmlD_4",
      "given": [
        "#API_Document"
      ],
      "severity": "error",
      "then": {
        "function": "oasPathParam"
      },
      "name": "path-params",
      "description": "Path parameters must be defined and valid in either the `path-parameters` or the `operation-parameters` object. Likewise, defined `path-parameters` or `operation-parameters` must be used in the `paths` string.\r\n\r\n**Valid Example**\r\n\r\nFor this path:\r\n\r\n`/users/{id}/{location}`\r\n\r\nThe following path parameters must be defined.\r\n\r\n```json lineNumbers\r\n      \"parameters\": [\r\n        {\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": \"id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"description\": \"This is the user's ID\"\r\n        },\r\n        {\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": \"location\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"description\": \"This is the user's location\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  ```",
      "message": "{{error}}"
    },
    "operation-parameters": {
      "id": "3oma-tqnuHSFLI9-yEuJn",
      "given": [
        "#Operation_Object"
      ],
      "severity": "warn",
      "then": {
        "function": "oasOpParams",
        "field": "parameters"
      },
      "name": "operation-parameters",
      "description": "Operation parameters should be unique and non-repeating:\r\n\r\n* `name` and `in` must be unique\r\n\r\nFor OAS2:\r\n\r\n* Operations should not have `in: body` and `in: formData` parameters.\r\n* Operations should have only one `in: body` parameter.\r\n\r\n**Invalid Example**\r\n\r\nIn this example, the query paramater `\"name\": \"last name\"` is repeated.\r\n\r\n```json lineNumbers\r\n{\r\n  \"parameters\": [\r\n    {\r\n      \"schema\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"in\": \"query\",\r\n      \"name\": \"last name\",\r\n      \"description\": \"User's last name\"\r\n    },\r\n    {\r\n      \"schema\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"in\": \"query\",\r\n      \"name\": \"last name\",\r\n      \"description\": \"User's last name\"\r\n    }\r\n  ],\r\n}\r\n```\r\n\r\n**Valid Example**\r\n\r\nIn this example, query parameters are unique.\r\n\r\n```json lineNumbers\r\n{\r\n  \"parameters\": [\r\n    {\r\n      \"schema\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"in\": \"query\",\r\n      \"name\": \"first name\",\r\n      \"description\": \"User's first name\"\r\n    },\r\n    {\r\n      \"schema\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"in\": \"query\",\r\n      \"name\": \"last name\",\r\n      \"description\": \"User's last name\"\r\n    }\r\n  ],\r\n}\r\n```",
      "message": "Operation parameters are unique and non-repeating."
    },
    "typed-enum": {
      "id": "ZCrlQ45JhPXrll9pIkpmG",
      "given": [
        "$..[?(@ && @.enum && @.type)]"
      ],
      "severity": "warn",
      "then": {
        "function": "typedEnum"
      },
      "name": "typed-enum",
      "description": "All `enum' values should respect the specified type.\r\n\r\n**Invalid Example**\r\n\r\nIn this example, the `enum` type is `integer`, but the values are strings.\r\n\r\n```json lineNumbers\r\n{\r\n    \"schema\": {\r\n      \"type\": \"integer\",\r\n      \"enum\": [\r\n         \"standard\",\r\n         \"metric\",\r\n         \"imperial\"\r\n       ]\r\n     },\r\n```\r\n\r\n**Valid Example**\r\n\r\nIn this example, the `enum` type is `string` and the values are strings.\r\n\r\n```json lineNumbers\r\n{\r\n    \"schema\": {\r\n      \"type\": \"string\",\r\n      \"enum\": [\r\n         \"standard\",\r\n         \"metric\",\r\n         \"imperial\"\r\n       ]\r\n     },",
      "message": "{{error}}"
    },
    "oas2-schema": {
      "id": "8jyCFPpoC18JqdLuy6Yly",
      "given": [
        "#API_Document"
      ],
      "severity": "error",
      "then": {
        "function": "oasDocumentSchema"
      },
      "name": "oas2-schema",
      "description": "This Stoplight core rule validates the structure of OpenAPI v2 specification. This rule should never be disabled.",
      "message": "{{error}}",
      "formats": [
        "oas2"
      ]
    },
    "oas3-schema": {
      "id": "4NHl_-tmDM9m30uWuGpvN",
      "given": [
        "#API_Document"
      ],
      "severity": "error",
      "then": {
        "function": "oasDocumentSchema"
      },
      "name": "oas3-schema",
      "description": "This Stoplight core rule validates the structure of OpenAPI v3.x specification. This rule should never be disabled.",
      "message": "{{error}}",
      "formats": [
        "oas3"
      ]
    },
    "oas3-unused-component": {
      "id": "lsVDelEdYBAtr7XMp2Wuc",
      "given": [
        "#API_Document"
      ],
      "severity": "warn",
      "then": {
        "function": "oasUnusedComponent"
      },
      "name": "oas3-unused-component",
      "description": "A potentially shareable component is not being used. This may be expected, but you should review sharable components to avoid duplicate entry.",
      "message": "{{error}}",
      "formats": [
        "oas3"
      ]
    },
    "operation-operationId-unique": {
      "id": "LsfWEpBpgF6fwU_yCEabR",
      "given": [
        "#API_Document"
      ],
      "severity": "error",
      "then": {
        "function": "oasOpIdUnique"
      },
      "name": "operation-operationId-unique",
      "description": "Every operation in a single document must have a unique `operationID`.\r\n\r\n**Valid Example**\r\n\r\nIn this example, the `operationId` is `get-users`. This `operationId` must be unique in an API document.\r\n\r\n```json lineNumbers\r\n{\r\n  \"get\": {\r\n        \"summary\": \"Get users\",\r\n        ... ,\r\n        \"operationId\": \"get-users\"\r\n      }\r\n}\r\n```\r\n",
      "message": "Every operation must have unique operationId"
    },
    "oas2-operation-formData-consume-check": {
      "id": "L7uL19AFYPg-Iwc-IXwFv",
      "given": [
        "#Operation_Object"
      ],
      "severity": "error",
      "then": {
        "function": "oasOpFormDataConsumeCheck"
      },
      "name": "oas2-operation-formData-consume-check",
      "description": "Operations with an `in: formData` parameter must include a `consumes` property with one of these values:\r\n\r\n`application/x-www-form-urlencoded`\r\n\r\n`multipart/form-data`\r\n\r\n**Valid Example**\r\n\r\nIn this example, the `consumes` property correctly includes the `multipart/form-data` value.\r\n\r\n```json lineNumbers\r\n{\r\n   \"post\":{\r\n      \"summary\":\"Uploads a file\",\r\n      \"consumes\":[\r\n         \"multipart/form-data\"\r\n      ],\r\n      \"parameters\":[\r\n         {\r\n            \"name\":\"name\",\r\n            \"in\":\"formData\",\r\n            \"description\":\"Upload a file\",\r\n            \"required\":false,\r\n            \"type\":\"string\"\r\n         }\r\n      ]\r\n   }\r\n}",
      "message": "Operations with \"in: formData\" parameter must include \"application/x-www-form-urlencoded\" or \"multipart/form-data\" in their \"consumes\" property.",
      "formats": [
        "oas2"
      ]
    },
    "operation-tag-defined": {
      "id": "5lLfmJUjQZn9WhUTPPaqI",
      "given": [
        "#API_Document"
      ],
      "severity": "warn",
      "then": {
        "function": "oasTagDefined"
      },
      "name": "operation-tag-defined",
      "description": "Tags defined at the operation level should also be defined at the global level. \r\n\r\n**Operation-level Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"get\": {\r\n     ... ,\r\n     ... ,\r\n     \"tags\": [\r\n        \"Users\"\r\n     ],\r\n  }\r\n}  \r\n```\r\n\r\n**Global-level Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"tags\": [\r\n     {\r\n       \"name\": \"Users\",\r\n       ... ,\r\n     }\r\n  ],\r\n}\r\n\r\n```",
      "message": "Operation tags must be defined in global tags"
    },
    "no-$ref-siblings": {
      "id": "TGfoEqSHr-BVP69J9vira",
      "given": [
        "#All_Ref"
      ],
      "severity": "error",
      "then": {
        "function": "refSiblings"
      },
      "name": "no-$ref-siblings",
      "description": "Property must not be placed among $ref.",
      "message": "{{error}}",
      "formats": [
        "oas3.0",
        "oas2"
      ]
    },
    "oas2-operation-security-defined": {
      "id": "DSlP7Q7fK-D3XtFQkIAf8",
      "given": [
        "#API_Document"
      ],
      "severity": "warn",
      "then": {
        "function": "oasOpSecurityDefined",
        "functionOptions": {
          "schemesPath": [
            "securityDefinitions"
          ]
        }
      },
      "name": "oas2-operation-security-defined",
      "description": "Operation `security` values must match a scheme defined in the global `securityDefinitions` object. Empty `security` values for operations are ignored if authentication is not explicity required or is optional.\r\n\r\n**Valid Example**\r\n\r\nFor this global security scheme:\r\n\r\n```json lineNumbers\r\n{\r\n  \"securityDefinitions\": {\r\n    \"API Key\": {\r\n      \"name\": \"API Key\",\r\n      \"type\": \"apiKey\",\r\n      \"in\": \"query\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThis is a valid operation security value:\r\n\r\n```json lineNumbers\r\n{  \"operationId\": \"get-users-userId\",\r\n        \"security\": [\r\n          {\r\n            \"API Key\": []\r\n          }\r\n        ]\r\n}\r\n```\r\n\r\n**Invalid Example**\r\n\r\nFor the same global security scheme, this is an invalid operation security value:\r\n\r\n```json lineNumbers\r\n{  \"operationId\": \"get-users-userId\",\r\n        \"security\": [\r\n          {\r\n            \"oath2\": []\r\n          }\r\n        ]\r\n}\r\n```",
      "message": "{{error}}",
      "formats": [
        "oas2"
      ]
    },
    "oas3-operation-security-defined": {
      "id": "DV8FMK4lch2tJOUgq2hC6",
      "given": [
        "#API_Document"
      ],
      "severity": "warn",
      "then": {
        "function": "oasOpSecurityDefined",
        "functionOptions": {
          "schemesPath": [
            "components",
            "securitySchemes"
          ]
        }
      },
      "name": "oas3-operation-security-defined",
      "description": "Operation `security` values must match a scheme defined in the global `components.security.Schemes` object. \r\n\r\n**Valid Example**\r\n\r\nFor this global security scheme:\r\n\r\n```json lineNumbers\r\n{\r\n\"components\": {\r\n  \"security\": [\r\n    {\r\n      \"app-id\": []\r\n    }\r\n  ]\r\n }\r\n}\r\n```\r\n\r\n`app-id` is a valid operation `security` value:\r\n\r\n```json lineNumbers\r\n{  \r\n    \"get\": {\r\n        \"security\": [\r\n          {\r\n            \"app-id\": []\r\n          }\r\n      ]\r\n  }\r\n}  \r\n```\r\n\r\n**Invalid Example**\r\n\r\nFor the same global security scheme, `oath2` is an invalid operation `security` value:\r\n\r\n```json lineNumbers\r\n{  \r\n    \"get\": {\r\n        \"security\": [\r\n          {\r\n            \"oath2\": []\r\n          }\r\n      ]\r\n  }\r\n}  \r\n```",
      "message": "{{error}}",
      "formats": [
        "oas3"
      ]
    },
    "duplicated-entry-in-enum": {
      "id": "Ki9fOJiIZ4MxqzFsj9Mls",
      "given": [
        "#All_Enum_Object"
      ],
      "severity": "warn",
      "then": {
        "function": "oasSchema",
        "functionOptions": {
          "schema": {
            "type": "array",
            "uniqueItems": true
          }
        },
        "field": "enum"
      },
      "name": "duplicated-entry-in-enum",
      "description": "All enum values should be unique.\r\n\r\n**Invalid Example**\r\n\r\nThere are two `json` enum values.\r\n\r\n```json lineNumbers\r\n{\r\n  \"schema\":{\r\n     \"type\":\"string\",\r\n       \"enum\":[\r\n          \"json\",\r\n          \"json\",\r\n          \"html\"\r\n   ]\r\n }\r\n}\r\n```\r\n**Valid Example**\r\n\r\nAll enum values are unique.\r\n\r\n```json lineNumbers\r\n{\r\n  \"schema\":{\r\n     \"type\":\"string\",\r\n       \"enum\":[\r\n          \"json\",\r\n          \"xml\",\r\n          \"html\"\r\n   ]\r\n }\r\n}\r\n```",
      "message": "{{error}}"
    },
    "oas2-api-schemes": {
      "id": "Sa6ca6nOKao44wtSi9OUX",
      "given": [
        "#API_Document"
      ],
      "severity": "error",
      "then": {
        "function": "schema",
        "functionOptions": {
          "schema": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "dialect": "draft7"
        },
        "field": "schemes"
      },
      "name": "oas2-api-schemes",
      "description": "OpenAPI 2 host `schemes` reflect the transfer protocol of the API. Host schemes must be present and an array with one or more of these values: `http`, `https`, `ws`, or `wss`.\r\n\r\n**Valid Example**\r\n\r\nThis example shows that host schemes are `http` and `https`.\r\n\r\n```json\r\n{\r\n   \"schemes\":[\r\n      \"http\",\r\n      \"https\"\r\n   ]\r\n}\r\n \r\n```",
      "message": "OpenAPI host \"schemes\" must be present and non-empty array",
      "formats": [
        "oas2"
      ]
    },
    "oas2-discriminator": {
      "id": "8hb1uw8oqGCx6xtPPJEYN",
      "given": [
        "#API_Document"
      ],
      "severity": "error",
      "then": {
        "function": "oasDiscriminator",
        "field": "definitions[?(@.discriminator)]"
      },
      "name": "oas2-discriminator",
      "description": "Discriminator property must be defined and required",
      "message": "Discriminator property must be defined and required",
      "formats": [
        "oas2"
      ]
    },
    "server-not-example": {
      "id": "HiKtw3UzUjqSICwp7U4gs",
      "given": [
        "#API_Server_URL"
      ],
      "severity": "warn",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "notMatch": "example.com"
        }
      },
      "name": "server-not-example",
      "description": "Server URLs must not direct to example.com. This helps ensure URLs are valid before you distribute your API document.\r\n\r\n**Invalid Example**\r\n\r\n```json lineNumbers\r\n{  \r\n  \"servers\": [\r\n    {\r\n      ... ,\r\n      \"url\": \"https://example.com\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{  \r\n  \"servers\": [\r\n    {\r\n      ... ,\r\n      \"url\": \"https://api.openweathermap.org/data/2.5\"\r\n    }\r\n  ]\r\n}\r\n```",
      "message": "Server URL must not point at example.com."
    },
    "parameter-description": {
      "id": "wAaKfrfDZ_tHba4dSuKMw",
      "given": [
        "#Request_Parameter_All"
      ],
      "severity": "warn",
      "then": {
        "function": "truthy",
        "field": "description"
      },
      "name": "parameter-description",
      "description": "All `parameter` objects should have a description.\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"parameters\": [\r\n    {\r\n      \"schema\": {\r\n        \"type\": \"integer\"\r\n      },\r\n      ... ,\r\n      ... ,\r\n      \"description\": \"The number of days to include in the response.\"\r\n    }\r\n}\r\n```\r\n",
      "message": "Parameter objects must have \"description\"."
    },
    "oas2-anyOf": {
      "id": "Tc995VX4aohz4Isuit-io",
      "given": [
        "#API_Document_RecursiveSearch"
      ],
      "severity": "warn",
      "then": {
        "function": "undefined",
        "field": "anyOf"
      },
      "name": "oas2-anyOf",
      "description": "The `anyOf` keyword is not supported in OAS2. Only `allOf` is supported.\r\n\r\n**Invalid Example**\r\n\r\n```json lineNumbers\r\n{\r\n   \"schema\": {\r\n     \"anyOf\": [\r\n       {\r\n         \"properties\": {\r\n           \"firstName\": {\r\n             \"type\": \"string\"\r\n            },\r\n           \"lastName\": {\r\n             \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        {}\r\n      ],\r\n   }\r\n}\r\n```\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"firstName\": {\r\n                  \"type\": \"string\"\r\n                },\r\n                \"lastName\": {\r\n                  \"type\": \"string\"\r\n                }\r\n             },\r\n           }\r\n}\r\n```",
      "message": "anyOf is not available in OpenAPI v2, it was added in OpenAPI v3",
      "formats": [
        "oas2"
      ]
    },
    "oas2-oneOf": {
      "id": "21Ox-sro7wfTXONHwFG8n",
      "given": [
        "#API_Document_RecursiveSearch"
      ],
      "severity": "warn",
      "then": {
        "function": "undefined",
        "field": "oneOf"
      },
      "name": "oas2-oneOf",
      "description": "The `oneOf` keyword is not supported in OAS2. Only `allOf` is supported.\r\n\r\n**Invalid Example**\r\n\r\n```json lineNumbers\r\n{\r\n   \"schema\": {\r\n     \"oneOf\": [\r\n       {\r\n         \"properties\": {\r\n           \"firstName\": {\r\n             \"type\": \"string\"\r\n            },\r\n           \"lastName\": {\r\n             \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        {}\r\n      ],\r\n   }\r\n}\r\n```\r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n  \"schema\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"firstName\": {\r\n                  \"type\": \"string\"\r\n                },\r\n                \"lastName\": {\r\n                  \"type\": \"string\"\r\n                }\r\n             },\r\n           }\r\n}\r\n```",
      "message": "oneOf is not available in OpenAPI v2, it was added in OpenAPI v3",
      "formats": [
        "oas2"
      ]
    },
    "oas3-examples-value-or-externalValue": {
      "id": "pDUVeE5c8zXTW_rL6qYVO",
      "given": [
        "#All_Example"
      ],
      "severity": "warn",
      "then": {
        "function": "xor",
        "functionOptions": {
          "properties": [
            "externalValue",
            "value"
          ]
        }
      },
      "name": "oas3-examples-value-or-externalValue",
      "description": "The `examples` object should include a `value` or `externalValue` field, but cannot include both.\r\n\r\n**Invalid Example**\r\n\r\nThis example includes both a `value` field and an `externalValue` field.\r\n\r\n```json lineNumbers\r\n{\r\n    \"examples\": {\r\n      \"example-1\": {\r\n        \"value\": {\r\n          \"id\": \"string\",\r\n          \"name\": \"string\"\r\n       },\r\n        \"externalValue\": {\r\n          \"id\": \"string\",\r\n           \"name\": \"string\"\r\n         }\r\n      }\r\n   }\r\n}\r\n```\r\n\r\n**Valid Example** \r\n\r\nThis example includes only a `value` field.\r\n\r\n```json lineNumbers\r\n{\r\n     \"examples\": {\r\n       \"example-1\": {\r\n         \"value\": {\r\n            \"id\": \"string\",\r\n            \"name\": \"string\"\r\n       }\r\n    }\r\n  }\r\n}",
      "message": "Examples must have either \"value\" or \"externalValue\" field.",
      "formats": [
        "oas3"
      ]
    },
    "oas2-valid-schema-example": {
      "id": "HCsXzikuvfev60fIMVZue",
      "given": [
        "#All_Example_Schema"
      ],
      "severity": "error",
      "then": {
        "function": "oasExample",
        "functionOptions": {
          "oasVersion": 2,
          "schemaField": "$",
          "type": "schema"
        }
      },
      "name": "oas2-valid-schema-example",
      "description": "Examples must be valid against their defined schema. \r\n\r\n**Valid Example**\r\n\r\nThe following schema includes the `name` and `petType` properties.  \r\n\r\n```json lineNumbers\r\n{\r\n   \"Pet\":{\r\n      \"type\":\"object\",\r\n      \"properties\":{\r\n         \"name\":{\r\n            \"type\":\"string\"\r\n         },\r\n         \"petType\":{\r\n            \"type\":\"string\"\r\n         }\r\n      }\r\n   }\r\n}\r\n```\r\n\r\nWhen referenced in a response example, the property names on line 6 and 7 must match those in the schema (`petName` and `petType`).\r\n\r\n```json lineNumbers\r\n{\r\n   \"responses\":{\r\n      \"200\":{\r\n         \"content\":{\r\n            \"application/json\":{\r\n               \"examples\":{\r\n                  \"Pet Example\":{\r\n                     \"petName\":\"Bubbles\",\r\n                     \"petType\":\"Dog\"\r\n                  }\r\n               },\r\n               \"schema\":{\r\n                  \"$ref\":\"#/definitions/Pet\"\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n```",
      "message": "{{error}}",
      "formats": [
        "oas2"
      ]
    },
    "oas3-valid-schema-example": {
      "id": "0sh8syuPBPzMlFbzx38uc",
      "given": [
        "#All_Example_Schema"
      ],
      "severity": "error",
      "then": {
        "function": "oasExample",
        "functionOptions": {
          "oasVersion": 3,
          "schemaField": "$",
          "type": "schema"
        }
      },
      "name": "oas3-valid-schema-example",
      "description": "Examples must be valid against their defined schema. \r\n\r\n**Valid Example**\r\n\r\nThe following schema includes the `name` and `petType` properties.  \r\n\r\n```json lineNumbers\r\n{\r\n   \"Pet\":{\r\n      \"type\":\"object\",\r\n      \"properties\":{\r\n         \"name\":{\r\n            \"type\":\"string\"\r\n         },\r\n         \"petType\":{\r\n            \"type\":\"string\"\r\n         }\r\n      }\r\n   }\r\n}\r\n```\r\n\r\nWhen referenced in a response example, the property names on line 6 and 7 must match those in the schema (`petName` and `petType`).\r\n\r\n```json lineNumbers\r\n{\r\n   \"responses\":{\r\n      \"200\":{\r\n         \"content\":{\r\n            \"application/json\":{\r\n               \"examples\":{\r\n                  \"Pet Example\":{\r\n                     \"petName\":\"Bubbles\",\r\n                     \"petType\":\"Dog\"\r\n                  }\r\n               },\r\n               \"schema\":{\r\n                  \"$ref\":\"#/definitions/Pet\"\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n```",
      "message": "{{error}}",
      "formats": [
        "oas3"
      ]
    },
    "oas2-valid-media-example": {
      "id": "L4DwG3-uQuqu1dg-zuoRw",
      "given": [
        "#All_Example_Media"
      ],
      "severity": "error",
      "then": {
        "function": "oasExample",
        "functionOptions": {
          "oasVersion": 2,
          "schemaField": "schema",
          "type": "media"
        }
      },
      "name": "oas2-valid-media-example",
      "description": "Examples must be valid against their defined schema. Common reasons you may see errors if:\r\n\r\n* The value used for property examples is not the same type indicated in the schema (string vs. integer, for example).\r\n* Examples contain properties not included in the schema.\r\n\r\n**Valid Example**\r\n\r\nThe following schema indicates that the `id` property is a `string` type.  \r\n\r\n```json lineNumbers\r\n\"User\":{\r\n   \"title\":\"User\",\r\n   \"type\":\"object\",\r\n   \"properties\":{\r\n      \"id\":{\r\n         \"type\":\"string\"\r\n      }\r\n   }\r\n}\r\n```\r\nWhen the example is referenced in a response, the `id` property must be `string`.\r\n\r\n```json lineNumbers\r\n{\r\n   \"responses\":{\r\n      \"200\":{\r\n         \"description\":\"User Found\",\r\n         \"schema\":{\r\n            \"$ref\":\"#/definitions/User\"\r\n         },\r\n         \"examples\":{\r\n            \"Get User Alice Smith\":{\r\n               \"id\": \"smith, alice\",\r\n            }\r\n         }\r\n      },\r\n```",
      "message": "{{error}}",
      "formats": [
        "oas2"
      ]
    },
    "oas3-valid-media-example": {
      "id": "WuZTeSa_wBKZEFpYPzSFE",
      "given": [
        "#All_Example_Media"
      ],
      "severity": "error",
      "then": {
        "function": "oasExample",
        "functionOptions": {
          "oasVersion": 3,
          "schemaField": "schema",
          "type": "media"
        }
      },
      "name": "oas3-valid-media-example",
      "description": "The following schema includes the `name` and `petType` properties.  \r\n\r\n**Valid Example**\r\n\r\n```json lineNumbers\r\n{\r\n   \"Pet\":{\r\n      \"type\":\"object\",\r\n      \"properties\":{\r\n         \"name\":{\r\n            \"type\":\"string\"\r\n         },\r\n         \"petType\":{\r\n            \"type\":\"string\"\r\n         }\r\n      }\r\n   }\r\n}\r\n```\r\n\r\nWhen referenced in a response example, the property names on line 6 and 7 must match those in the schema (`petName` and `petType`).\r\n\r\n```json lineNumbers\r\n{\r\n   \"responses\":{\r\n      \"200\":{\r\n         \"content\":{\r\n            \"application/json\":{\r\n               \"examples\":{\r\n                  \"Pet Example\":{\r\n                     \"petName\":\"Bubbles\",\r\n                     \"petType\":\"Dog\"\r\n                  }\r\n               },\r\n               \"schema\":{\r\n                  \"$ref\":\"#/definitions/Pet\"\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n```",
      "message": "{{error}}",
      "formats": [
        "oas3"
      ]
    },
    "oas3-server-variables": {
      "id": "ISZtMagxrE_-9hAaOaPaO",
      "given": [
        "#All_Servers"
      ],
      "severity": "error",
      "then": {
        "function": "serverVariables",
        "functionOptions": {
          "checkSubstitutions": true
        }
      },
      "name": "oas3-server-variables",
      "description": "This rule ensures that server variables defined in OpenAPI Specification 3 (OAS3) and 3.1 are valid, not unused, and result in a valid URL. Properly defining and using server variables is crucial for the accurate representation of API endpoints and preventing potential misconfigurations or security issues.\n\n**Recommended**: Yes\n\n**Bad Examples**\n\n1. **Missing definition for a URL variable**:\n\n```yaml\nservers:\n  - url: \"https://api.{region}.example.com/v1\"\n    variables:\n      version:\n        default: \"v1\"\n```\n\nIn this example, the variable **`{region}`** in the URL is not defined within the **`variables`** object.\n\n2. **Unused URL variable:**\n\n```yaml\nservers:\n  - url: \"https://api.example.com/v1\"\n    variables:\n      region:\n        default: \"us-west\"\n```\n\nHere, the variable **`region`** is defined but not used in the server URL.\n\n3. **Invalid default value for an allowed value variable**:\n\n```yaml\nservers:\n  - url: \"https://api.{region}.example.com/v1\"\n    variables:\n      region:\n        default: \"us-south\"\n        enum:\n          - \"us-west\"\n          - \"us-east\"\n```\n\nThe default value 'us-south' isn't one of the allowed values in the **`enum`**.\n\n4. **Invalid resultant URL**:\n\n```yaml\nservers:\n  - url: \"https://api.example.com:{port}/v1\"\n    variables:\n      port:\n        default: \"8o80\"\n```\n\nSubstituting the default value of **`{port}`** results in an invalid URL.\n\n**Good Example**\n\n```yaml\nservers:\n  - url: \"https://api.{region}.example.com/{version}\"\n    variables:\n      region:\n        default: \"us-west\"\n        enum:\n          - \"us-west\"\n          - \"us-east\"\n      version:\n        default: \"v1\"\n```\n\nIn this example, both **`{region}`** and **`{version}`** variables are properly defined and used in the server URL. Also, the default value for **`region`** is within the allowed values.",
      "message": "{{error}}",
      "formats": [
        "oas3"
      ]
    }
  },
  "extendedDefault": false
}